
var numOfSquares = 9;
var colors = [];
var picked;

var squares = document.querySelectorAll(".square1");
var colorDisplay = document.getElementById("colorDisplay");
var messageDisplay = document.querySelector("#message");
var h1 = document.querySelector("h1");
var resetButton = document.querySelector("#res");
var modeButton = document.querySelectorAll(".mode");
// var easy = document.querySelector("#easy");
// var medium = document.querySelector("#mediumbtn");

//run init
init();
//init function setsup buttons and sqaures
function init(){
   setUpModeButtons();
   setUpSquares();
}

function setUpModeButtons(){
     for(var i = 0; i<modeButton.length; i++){
        modeButton[i].addEventListener("click", function(){
            modeButton[0].classList.remove("selectedDifficulty");
            modeButton[1].classList.remove("selectedDifficulty");
            modeButton[2].classList.remove("selectedDifficulty");
            this.classList.add("selectedDifficulty");
            if(this.textContent === "Easy"){
                numOfSquares = 3;
            }
            else if(this.textContent === "Medium"){
                numOfSquares = 6;
            }
            else{
                numOfSquares = 9;
            }
//      } this if statement is the same as the one line below.
        //this.textContent === "EASY" ? numOfSquares = 3: numOfSquares = 6;
        reset();
    });
}
}

function setUpSquares(){
    for(var i = 0; i < squares.length; i++){
    //add intial colors to squares
    squares[i].style.backgroundColor = colors[i];
    squares[6].style.display = "none";
    //add event listener 
    squares[i].addEventListener("click", function(){
        //grab color of picked square
        var clickedColor = this.style.backgroundColor;
        //compare color to picked
        if(clickedColor === picked){
            messageDisplay.textContent = "Correct!";
            changeColors(clickedColor);
            h1.style.backgroundColor = clickedColor;
            resetButton.textContent = "Play Again?";
        }
        else{
            this.style.backgroundColor = "#232323";
            messageDisplay.textContent = "Try Again";
        }
        });
    }
    reset(); 
}
//figure out how many sqaures to show
//pick new colour
//pick new pickedcolor
//update page to relfect color

function reset(){
    //generate all new colors
    colors = generateRandomColors(numOfSquares);
    //pick new random color from array
    picked = pickColor();
    //change color display to match picked color
    colorDisplay.textContent = picked;
    resetButton.textContent  ="New Colors";
    messageDisplay.textContent = "";
    //change colors of sqaures
    for(var i = 0; i<squares.length; i++){
        if(colors[i]){
            squares[i].style.display = "block";
            squares[i].style.background = colors[i];
        }
        else{
            squares[i].style.display = "none";
        }
    }
    h1.style.backgroundColor = "steelblue";
}

// easy.addEventListener("click", function(){
//  easy.classList.add("selectedDifficulty");
//  medium.classList.remove("selectedDifficulty");
//  numOfSquares = 3;
//  //generate all new colors
//  colors = generateRandomColors(numOfSquares);
//  //pick new random color from array
//  picked = pickColor();
//  //change color display to match picked color
//  colorDisplay.textContent = picked;
//  //change colors of sqaures
//  h1.style.backgroundColor = "steelblue";
//  for(var i = 0; i<squares.length; i++ ){
//      if(colors[i]){
//          squares[i].style.backgroundColor = colors[i];
//      }
//      else{
//          squares[i].style.display = "none";
//      }
//  }
// });
// medium.addEventListener("click", function(){
//  easy.classList.remove("selectedDifficulty");
//  medium.classList.add("selectedDifficulty");
//  numOfSquares = 6;
//  //generate all new colors
//  colors = generateRandomColors(numOfSquares);
//  //pick new random color from array
//  picked = pickColor();
//  //change color display to match picked color
//  colorDisplay.textContent = picked;
//  //change colors of sqaures
//  h1.style.backgroundColor = "steelblue";
//  for(var i = 0; i<squares.length; i++ ){
//          squares[i].style.backgroundColor = colors[i];
//          squares[i].style.display = "block";
//  }
// });

resetButton.addEventListener("click", function(){
    reset();
});

//changeColors(), changes the colors ofg the background tiles.
//out of the six colors generated by randomColors() and pushed into arr by generateRandomColor
//there are now 6 options of colors as var colors = generateRandomColors(6);
//if the number was 8, then 8 colors would be genearted. 
//starting from index 0, the tile at 0 gets the color at 0 in var colors = arr.
//and so on.
function changeColors(color){
    //loop through all sqaures
    for(var i =0; i<squares.length; i++){
        //change each color to picked color
        squares[i].style.backgroundColor = color;
    }
}

//pickColor() gets a random color from the arr or colors and returns a random color from colors[arr]
//therefore out of six options in the array, a random one is selected and returned.
//the six options are generated by randomColor(), which then generateRandomColor pushes into an empty arr
//this array is eqaul to var colors.
function pickColor(){
    var random = Math.floor(Math.random() * colors.length);
    return colors[random];
}

//this function creates an array which calls randomColor. The colors generated by random colors,
//get puched into the array
//this array is equal to var colors.
function generateRandomColors(num){
    //make an array
    var arr = [];
    //repeat num times
    for(var i = 0; i<num; i++){
        //get random color and push into array
        arr.push(randomColor());
    }
    return arr;
}

//this function gets random red, random green, random blue from 0 to 255.
//then returns it as a string format with the red, green, and blue
//this string is then pushed into arr from generateRandomColors which in the end equals var colors.
function randomColor(){
    //pick a "red" from 0 - 255
    var red = Math.floor(Math.random() * 256);
    //pick a "green" from 0 - 255
    var green = Math.floor(Math.random() * 256);
    //pick a "blue" from 0 - 255
    var blue = Math.floor(Math.random() * 256);
    return "rgb(" + red + ", " + green + ", " + blue + ")";
}
